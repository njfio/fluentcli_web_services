FROM rust:1.75-bullseye as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libx11-dev \
    libxext-dev \
    libxft-dev \
    libxinerama-dev \
    libxcursor-dev \
    libxrender-dev \
    libxfixes-dev \
    libxtst-dev \
    libxrandr-dev \
    libxi-dev \
    libxss-dev \
    xvfb \
    x11vnc \
    xdotool \
    python3 \
    python3-pip \
    firefox-esr \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy the worker app source code
COPY worker_app/Cargo.toml ./
COPY worker_app/src ./src

# Build the worker app
RUN cargo build --release

FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libx11-6 \
    libxext6 \
    libxft2 \
    libxinerama1 \
    libxcursor1 \
    libxrender1 \
    libxfixes3 \
    libxtst6 \
    libxrandr2 \
    libxi6 \
    libxss1 \
    xvfb \
    x11vnc \
    xdotool \
    python3 \
    python3-pip \
    firefox-esr \
    curl \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy the built binary from the builder stage
COPY --from=builder /app/target/release/worker_app .

# Copy the start script
COPY worker_app/start.sh .
RUN chmod +x start.sh

# Create /repo directory
RUN mkdir -p /repo

# Set up X11 virtual framebuffer
ENV DISPLAY=:99
ENV RESOLUTION=1024x768x24

# Start Xvfb, x11vnc, and the worker app
CMD ["./start.sh"]
