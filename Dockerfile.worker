FROM docker.io/ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive
ENV DEBIAN_PRIORITY=high

RUN apt-get update && \
    apt-get -y upgrade && \
    apt-get -y install \
    # UI Requirements
    xvfb \
    xterm \
    xdotool \
    scrot \
    imagemagick \
    sudo \
    metacity \
    dbus-x11 \
    x11vnc \
    xauth \
    x11-xserver-utils \
    x11-utils \
    x11-apps \
    xinit \
    # Menu and panel
    lxpanel \
    lxmenu-data \
    # Theme requirements
    gnome-themes-extra \
    adwaita-icon-theme \
    gtk2-engines \
    gtk2-engines-pixbuf \
    gtk2-engines-murrine \
    lxappearance \
    # Menu system
    menu \
    menulibre \
    # Python/pyenv reqs
    build-essential \
    libssl-dev  \
    zlib1g-dev \
    libbz2-dev \
    libreadline-dev \
    libsqlite3-dev \
    curl \
    git \
    libncursesw5-dev \
    xz-utils \
    tk-dev \
    libxml2-dev \
    libxmlsec1-dev \
    libffi-dev \
    liblzma-dev \
    # SDL dependencies for gosu
    libsdl2-dev \
    libsdl2-ttf-dev \
    libsdl2-image-dev \
    libsdl2-mixer-dev \
    libpango1.0-dev \
    libopenal-dev \
    libsndfile1-dev \
    # Network tools
    net-tools \
    netcat \
    # PPA req
    software-properties-common && \
    # Userland apps
    sudo add-apt-repository ppa:mozillateam/ppa && \
    sudo apt-get install -y --no-install-recommends \
    libreoffice \
    firefox-esr \
    xpdf \
    gedit \
    xpaint \
    galculator \
    unzip && \
    apt-get clean

# Install Ruby
RUN apt-get install -y ruby-full ruby-dev && \
    gem install bundler rake rails rspec sinatra gosu minitest

# Install noVNC
RUN git clone --branch v1.5.0 https://github.com/novnc/noVNC.git /opt/noVNC && \
    git clone --branch v0.12.0 https://github.com/novnc/websockify /opt/noVNC/utils/websockify && \
    ln -s /opt/noVNC/vnc.html /opt/noVNC/index.html

# Setup user
ENV USERNAME=computeruse
ENV HOME=/home/$USERNAME
RUN useradd -m -s /bin/bash -d $HOME $USERNAME && \
    echo "${USERNAME} ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers && \
    chown -R $USERNAME:$USERNAME /opt/noVNC && \
    # Add user to required groups
    usermod -a -G audio,video $USERNAME

# Install Rust
ENV RUSTUP_HOME=/usr/local/rustup \
    CARGO_HOME=/usr/local/cargo \
    PATH=/usr/local/cargo/bin:$PATH

# Install Rust with proper permissions
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && \
    rustup default stable && \
    mkdir -p /usr/local/cargo/registry && \
    chown -R $USERNAME:$USERNAME /usr/local/cargo/registry && \
    chmod -R 755 /usr/local/cargo/registry

# Copy worker app and build it
COPY --chown=$USERNAME:$USERNAME worker_app /tmp/worker_app/
WORKDIR /tmp/worker_app
RUN cargo build --release && \
    mkdir -p $HOME/worker_app/target/release && \
    cp target/release/worker_app $HOME/worker_app/target/release/

# Switch to computeruse user
USER computeruse
WORKDIR $HOME

# Setup python
RUN git clone https://github.com/pyenv/pyenv.git ~/.pyenv && \
    cd ~/.pyenv && src/configure && make -C src && cd .. && \
    echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc && \
    echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc && \
    echo 'eval "$(pyenv init -)"' >> ~/.bashrc
ENV PYENV_ROOT="$HOME/.pyenv"
ENV PATH="$PYENV_ROOT/bin:$PATH"
ENV PYENV_VERSION=3.11.6
RUN eval "$(pyenv init -)" && \
    pyenv install $PYENV_VERSION && \
    pyenv global $PYENV_VERSION && \
    pyenv rehash

ENV PATH="$HOME/.pyenv/shims:$HOME/.pyenv/bin:$PATH"

# Install Python dependencies
RUN python -m pip install --upgrade pip==23.1.2 setuptools==58.0.4 wheel==0.40.0 && \
    python -m pip install \
    numpy \
    pandas \
    matplotlib \
    scikit-learn \
    tensorflow \
    torch \
    pygame \
    flask \
    django \
    jupyter \
    requests \
    beautifulsoup4 \
    selenium \
    pytest \
    pylint \
    black \
    opencv-python \
    pillow \
    networkx \
    scipy

# Set up X11 and VNC
RUN mkdir -p $HOME/.vnc && \
    touch $HOME/.Xauthority

# Configure GTK theme
RUN mkdir -p $HOME/.config/gtk-2.0 $HOME/.config/gtk-3.0 && \
    echo '[Settings]\ngtk-theme-name=Adwaita-dark\ngtk-icon-theme-name=Adwaita\ngtk-font-name=Sans 10' > $HOME/.config/gtk-3.0/settings.ini && \
    echo 'gtk-theme-name="Adwaita-dark"\ngtk-icon-theme-name="Adwaita"\ngtk-font-name="Sans 10"' > $HOME/.gtkrc-2.0

# Set display configuration
ARG DISPLAY_NUM=99
ARG HEIGHT=800
ARG WIDTH=1280
ENV DISPLAY_NUM=$DISPLAY_NUM
ENV HEIGHT=$HEIGHT
ENV WIDTH=$WIDTH
ENV DISPLAY=:$DISPLAY_NUM
ENV DBUS_SESSION_BUS_ADDRESS="unix:path=/run/user/1000/bus"
ENV XDG_RUNTIME_DIR=/run/user/1000

# Copy desktop environment files
COPY --chown=$USERNAME:$USERNAME worker_app/desktop/ $HOME/.config/

# Copy and set up entrypoint
COPY --chown=$USERNAME:$USERNAME worker_entrypoint.sh $HOME/entrypoint.sh
RUN chmod +x $HOME/entrypoint.sh

ENTRYPOINT ["./entrypoint.sh"]
