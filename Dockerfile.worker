FROM rust:1.78-buster as builder

# Install dependencies
RUN apt-get update && apt-get install -y \
    libpq-dev \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Install FluentCLI
RUN cargo install --force --git https://github.com/njfio/fluent_cli --branch v.0.5.5-feature-docker-image fluent

# Install Amber CLI
RUN cargo install --git https://github.com/fpco/amber amber

# Create necessary directories
RUN mkdir -p /.fluent/state_store /.fluent/example_configurations

# Copy FluentCLI configuration files
RUN cp /usr/local/cargo/git/checkouts/fluent_cli-*/*/default_config_test.json /.fluent/
RUN cp /usr/local/cargo/git/checkouts/fluent_cli-*/*/amber.yaml /.fluent/
RUN cp /usr/local/cargo/git/checkouts/fluent_cli-*/*/example_configurations/*.json /.fluent/example_configurations/

# Final stage
FROM debian:buster-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    openssl \
    python3 \
    python3-pip \
    curl \
    bash \
    ruby \
    iputils-ping \
    nano \
    net-tools \
    jq \
    pandoc \
    git \
    procps \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy binaries and configurations from builder stage
COPY --from=builder /usr/local/cargo/bin/fluent /usr/local/bin/fluent
COPY --from=builder /usr/local/cargo/bin/amber /usr/local/bin/amber
COPY --from=builder /.fluent /.fluent
COPY --from=builder /.fluent/default_config_test.json /app/default_config_test.json

# Set environment variables
ENV AMBER_YAML=/.fluent/amber.yaml
ENV FLUENT_STATE_STORE=/.fluent/state_store
ENV FLUENT_CLI_V2_CONFIG_PATH=/.fluent/default_config_test.json
ENV AMBER_SECRET=

RUN sed -i 's/"uri": "bolt:\/\/localhost:7687"/"uri": "bolt:\/\/neo4j:7687"/g' /.fluent/default_config_test.json

CMD ["tail", "-f", "/dev/null"]